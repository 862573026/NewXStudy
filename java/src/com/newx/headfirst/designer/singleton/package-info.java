/**
 * Created by xuzhijian on 2018/2/12 0012.
 * 单例模式
 *  相比静态变量的优点：静态变量在程序一开始就需要创建好对象，如果这个对象非常耗费资源，并且这次程序执行没有使用它，造成不必要的浪费。
 *  特点：1.没有公开的构造器(构造器声明为private -> 所以不能被外部实例化不能继承，保证唯一) 2.延迟实例化
 *
 *  ide直接创建的单例模式是线程安全的，但是调用到类就初始化了，有一定的资源浪费。
 *  解决线程安全的其他方法：1.synchronized 修饰创建单例方法，但是如果经常用 getInstance 方法会造成很大的性能下降。
 *                          2.双检查加锁，单例用 volatile 修饰，synchronized 修饰 getInstance 内的创建方法(1.4以及更早版本的java中对volatile关键字实现会导致双重检查加锁失效，禁用)
 *
 *  两（多）个类加载器有机会创建各自的单例，所以自行制定类加载器，并指定同一个类加载器（应用没遇到过，没有体会）
 *
 *
 */
package com.newx.headfirst.designer.singleton;